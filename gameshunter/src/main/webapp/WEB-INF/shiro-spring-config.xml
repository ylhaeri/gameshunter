<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="
          http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
          http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd">

	<bean id="authenticationRealm" class="br.com.gameshunter.realm.AuthenticationRealm">
		<property name="credentialsMatcher" ref="passwordMatcher" />
	</bean>

	<!-- <bean id="sessionCookie" class="org.apache.shiro.web.servlet.SimpleCookie"> 
		<property name="name" value="session" /> <property name="path" value="/gameshunter/" 
		/> <property name="httpOnly" value="true" /> </bean> -->

	<bean id="sessionDAO"
		class="org.apache.shiro.session.mgt.eis.EnterpriseCacheSessionDAO" />

	<bean id="ehCacheManagerFactory"
		class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean">
		<property name="shared" value="true" />
	</bean>

	<bean id="ehCacheManager" class="org.apache.shiro.cache.ehcache.EhCacheManager">
		<property name="cacheManagerConfigFile" value="classpath:ehcache.xml" />
		<property name="cacheManager" ref="ehCacheManagerFactory" />
	</bean>

	<bean id="sessionManager"
		class="org.apache.shiro.web.session.mgt.DefaultWebSessionManager">
		<property name="globalSessionTimeout" value="100000" />
		<property name="sessionDAO" ref="sessionDAO" />
		<property name="cacheManager" ref="ehCacheManager" />
		<property name="sessionIdCookieEnabled" value="true" />
		<!-- <property name="sessionIdCookie" ref="sessionCookie" /> -->
	</bean>

	<bean id="rememberMeManager"
		class="br.com.gameshunter.controller.LightCookieRememberMeManager" />

	<!-- Security Manager -->
	<bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
		<property name="realm" ref="authenticationRealm" />
		<property name="sessionManager" ref="sessionManager" />
		<property name="rememberMeManager" ref="rememberMeManager" />
	</bean>

	<bean id="simpleByteSource" class="org.apache.shiro.util.SimpleByteSource">
		<constructor-arg name="" value=':3M9@%U)#=Sz3~)PCBlYgnOt' />
	</bean>

	<bean id="hashService" class="org.apache.shiro.crypto.hash.DefaultHashService">
		<property name="hashIterations" value="500000" />
		<property name="hashAlgorithmName" value="SHA-512" />
		<property name="generatePublicSalt" value="true" />
		<property name="privateSalt" ref="simpleByteSource" />
	</bean>

	<bean id="passwordService"
		class="org.apache.shiro.authc.credential.DefaultPasswordService">
		<property name="hashService" ref="hashService" />
	</bean>

	<bean id="passwordMatcher" class="org.apache.shiro.authc.credential.PasswordMatcher">
		<property name="passwordService" ref="passwordService" />
	</bean>

	<bean id="logoutFilter" class="org.apache.shiro.web.filter.authc.LogoutFilter">
		<property name="redirectUrl" value="/" />
	</bean>

	<!-- Define any javax.servlet.Filter beans you want anywhere in this application 
		context. -->
	<!-- They will automatically be acquired by the 'shiroFilter' bean above 
		and made available -->
	<!-- to the 'filterChainDefinitions' property. Or you can manually/explicitly 
		add them -->
	<!-- to the shiroFilter's 'filters' Map if desired. See its JavaDoc for 
		more details. -->
	<!-- <bean id="someFilter" class="..."/> -->
	<!-- <bean id="anotherFilter" class="..."> ... </bean> -->
	<bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
		<property name="securityManager" ref="securityManager" />
		<!-- <property name="filters"> <util:map> <entry key="anAlias" value-ref="someFilter"/> 
			</util:map> </property> -->
	</bean>




	<bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor" />
	<bean
		class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator"
		depends-on="lifecycleBeanPostProcessor" />
	<bean
		class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
		<property name="securityManager" ref="securityManager" />
	</bean>

	<bean id="secureRemoteInvocationExecutor"
		class="org.apache.shiro.spring.remoting.SecureRemoteInvocationExecutor">
		<property name="securityManager" ref="securityManager" />
	</bean>
	<bean id="secureRemoteInvocationFactory"
		class="org.apache.shiro.spring.remoting.SecureRemoteInvocationFactory" />
</beans>